# =========================================
# CourseSignal Backend - Production Environment Variables
# =========================================
# IMPORTANT: This is a template file. Copy to .env and fill in actual values.
# NEVER commit .env files to version control.
# All values here are EXAMPLES - replace with secure production values.

# =========================================
# APPLICATION
# =========================================
NODE_ENV=production
PORT=3002

# Frontend URL (for CORS and OAuth redirects)
# Example: https://app.coursesignal.com
APP_URL=https://your-frontend-domain.com

# =========================================
# DATABASE
# =========================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# For managed services (Render, Railway, etc.), use their provided DATABASE_URL
# SECURITY: Use strong passwords (20+ characters, mixed case, numbers, symbols)
DATABASE_URL=postgresql://coursesignal:REPLACE_WITH_STRONG_PASSWORD@postgres-host:5432/coursesignal

# Connection pool settings (optional)
DB_POOL_MAX=20
DB_POOL_MIN=5

# =========================================
# REDIS
# =========================================
# Redis connection string for Bull job queue
# Format: redis://username:password@host:port
# For managed Redis (Redis Labs, Upstash, etc.), use their provided URL
REDIS_URL=redis://default:REPLACE_WITH_REDIS_PASSWORD@redis-host:6379

# =========================================
# SECURITY - JWT & ENCRYPTION
# =========================================
# JWT Secret: Used for signing authentication tokens
# CRITICAL: Generate a strong random string (64+ characters)
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=REPLACE_WITH_64_CHAR_RANDOM_STRING

# Encryption Key: Used for encrypting OAuth tokens in database
# CRITICAL: Must be EXACTLY 32 characters (AES-256)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_KEY=REPLACE_WITH_32_CHAR_HEX_STRING

# =========================================
# OAUTH INTEGRATIONS - KAJABI
# =========================================
# Get these from: https://developers.kajabi.com/
# Create an OAuth application and whitelist your callback URL
KAJABI_CLIENT_ID=your_kajabi_client_id
KAJABI_CLIENT_SECRET=your_kajabi_client_secret

# =========================================
# OAUTH INTEGRATIONS - TEACHABLE
# =========================================
# Get these from: https://developers.teachable.com/
# Create an OAuth application and whitelist your callback URL
TEACHABLE_CLIENT_ID=your_teachable_client_id
TEACHABLE_CLIENT_SECRET=your_teachable_client_secret

# =========================================
# EMAIL SERVICE (SendGrid)
# =========================================
# Get API key from: https://app.sendgrid.com/settings/api_keys
# Required for: email verification, password resets, purchase notifications
SENDGRID_API_KEY=SG.your_sendgrid_api_key

# Sender email address (must be verified in SendGrid)
FROM_EMAIL=noreply@coursesignal.com
FROM_NAME=CourseSignal

# =========================================
# STRIPE (Billing & Payments)
# =========================================
# Get from: https://dashboard.stripe.com/apikeys
# Use live keys for production (starts with sk_live_)
STRIPE_SECRET_KEY=sk_live_your_stripe_secret_key

# Webhook secret for verifying Stripe webhook signatures
# Get from: https://dashboard.stripe.com/webhooks
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Stripe Price IDs (from your Stripe product catalog)
STRIPE_PRICE_ID_STARTER=price_your_starter_plan_id
STRIPE_PRICE_ID_PRO=price_your_pro_plan_id
STRIPE_PRICE_ID_ENTERPRISE=price_your_enterprise_plan_id

# =========================================
# OPTIONAL - MONITORING & OBSERVABILITY
# =========================================
# Sentry DSN for error tracking
# SENTRY_DSN=https://your_sentry_dsn@sentry.io/project_id

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# =========================================
# OPTIONAL - RATE LIMITING
# =========================================
# Requests per window per IP (default: 100 requests per 15 minutes)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =========================================
# SECURITY CHECKLIST BEFORE DEPLOYING
# =========================================
# [ ] Changed all default passwords
# [ ] Generated unique JWT_SECRET (64+ chars)
# [ ] Generated unique ENCRYPTION_KEY (32 chars)
# [ ] Set APP_URL to production frontend domain
# [ ] Configured SendGrid with verified sender domain
# [ ] Set Stripe to live mode keys
# [ ] Configured OAuth callback URLs in Kajabi/Teachable
# [ ] Enabled SSL/TLS on database connection
# [ ] Set NODE_ENV=production
# [ ] Restricted CORS origins
# [ ] Configured firewall rules (database, Redis)
# [ ] Set up automated backups for database
# [ ] Configured monitoring/alerting
